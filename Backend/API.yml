openapi: 3.0.0
info:
  title: Crew Member API
  description: API to manage crew members in the system
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Base URL for CrewMember API

paths:
  /crewMember:
    post:
      summary: Create a new crew member
      description: Adds a new crew member to the system
      operationId: createCrewMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrewMemberCreationRequestDTO'
      responses:
        '200':
          description: Successfully created crew member
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Add Success
                  data:
                    $ref: '#/components/schemas/CrewMemberCreationResponseDTO'
        '400':
          description: Bad request (validation errors)
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Provided arguments are invalid, see data for details."
                  data:
                    type: object
                    properties:
                      firstName:
                        type: string
                        example: "First name is required"
                      lastName:
                        type: string
                        example: "Last name is required"
                      email:
                        type: string
                        example: "Email is required"
                      phoneNumber:
                        type: string
                        example: "Phone number is required"
                      role:
                        type: string
                        example: "Role is required"
                      positions:
                        type: string
                        example: "Positions is required"
        '409':
          description: Conflict - Duplicate email detected
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: "Email is already in use."
                  data:
                    type: object
                    nullable: true

    get:
      summary: Get all crew members
      description: Retrieves a list of all crew members
      operationId: getAllCrewMembers
      responses:
        '200':
          description: Successfully retrieved all crew members
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Find Success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SimpleCrewMemberResponse'
        '204':
          description: No content found (No crew members)
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 204
                  message:
                    type: string
                    example: "No members found"
                  data:
                    type: object
                    nullable: true

  /crewMember/{userId}:
    get:
      summary: Get a crew member by userId
      description: Fetches a specific crew member by their unique userId
      operationId: getCrewMemberById
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the crew member to be retrieved
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved the crew member
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Found member with id: 2"
                  data:
                    $ref: '#/components/schemas/CrewMemberCreationResponseDTO'
        '404':
          description: User not found by the provided ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Could not find crew member with id 1"
                  data:
                    type: object
                    nullable: true

    delete:
      summary: Delete a crew member by userId
      description: Deletes a specific crew member by their unique userId
      operationId: deleteCrewMember
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the crew member to be deleted
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted the crew member
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Delete Success of crew member with id: 2"
        '404':
          description: User not found by the provided ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Could not find crew member with id 1"
                  data:
                    type: object
                    nullable: true

  /gameSchedule:
    post:
      summary: Create a new game schedule
      description: Adds a new game schedule to the system
      operationId: createGameSchedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameScheduleDto'
      responses:
        '200':
          description: Successfully created game schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Add Success"
                  data:
                    $ref: '#/components/schemas/GameSchedule'
        '400':
          description: Bad request (validation errors)
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Provided arguments are invalid, see data for details."
                  data:
                    type: object
                    properties:
                      sport:
                        type: string
                        example: "Sport is required"
                      season:
                        type: string
                        example: "Season is required"

  /gameSchedule/{scheduleId}/games:
    post:
      summary: Add a game to an existing game schedule
      description: Adds a new game to the specified game schedule
      operationId: addGameToSchedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          description: ID of the game schedule to add the game to
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameRequestDto'
      responses:
        '200':
          description: Successfully added the game to the schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Add Success"
                  data:
                    $ref: '#/components/schemas/GameResponseDto'
        '400':
          description: Bad request (validation errors)
          content:
            application/json:
              schema:
                type: object
                properties:
                  flag:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Provided arguments are invalid, see data for details."
                  data:
                    type: object
                    properties:
                      gameDate:
                        type: string
                        example: "Game date is required"
                      venue:
                        type: string
                        example: "Venue is required"
                      opponent:
                        type: string
                        example: "Opponent is required"
                      isFinalized:
                        type: string
                        example: "Finalized status is required"

components:
  schemas:
    CrewMember:
      type: object
      properties:
        userId:
          type: integer
          example: 2
        fullName:
          type: string
          example: Jane Smith
        email:
          type: string
          example: Jane.Smith@example.com
        phoneNumber:
          type: string
          example: 1112223333

    CrewMemberCreationRequestDTO:
      type: object
      properties:
        firstName:
          type: string
          description: First name of the crew member
          example: Jane
        lastName:
          type: string
          description: Last name of the crew member
          example: Smith
        email:
          type: string
          description: Email of the crew member
          example: Jane.Smith@example.com
        phoneNumber:
          type: string
          description: Phone number of the crew member (10 digits or 999-999-9999 format)
          example: 1112223333
        role:
          type: string
          description: Role of the crew member
          example: Assistant Coach
        positions:
          type: string
          description: Positions held by the crew member
          example: Midfielder, Coach

    CrewMemberCreationResponseDTO:
      type: object
      properties:
        userId:
          type: integer
          example: 2
        fullName:
          type: string
          example: Jane Smith
        email:
          type: string
          example: Jane.Smith@example.com
        phoneNumber:
          type: string
          example: 1112223333
        role:
          type: string
          example: Assistant Coach
        positions:
          type: string
          example: Midfielder, Coach
    GameSchedule:
      type: object
      properties:
        scheduleId:
          type: integer
          example: 1
        sport:
          type: string
          example: Football
        season:
          type: string
          pattern: "^[0-9]{4}-[0-9]{4}$"
          example: 2024-2025
        games:
          type: array
          items:
            $ref: '#/components/schemas/GameRequestDto'

    GameScheduleDto:
      type: object
      properties:
        sport:
          type: string
          example: Football
        season:
          type: string
          example: 2024-2025

    GameRequestDto:
      type: object
      properties:
        gameDate:
          type: string
          format: date
          example: "2025-11-30"
        venue:
          type: string
          example: "Stadium A"
        opponent:
          type: string
          example: "Team B"
        isFinalized:
          type: boolean
          example: true

    GameResponseDto:
      type: object
      properties:
        gameId:
          type: integer
          example: 123
        gameDate:
          type: string
          format: date
          example: "2025-11-30"
        venue:
          type: string
          example: "Stadium A"
        opponent:
          type: string
          example: "Team B"
        isFinalized:
          type: boolean
          example: true

    SimpleCrewMemberResponse:
      type: object
      properties:
        userId:
          type: integer
          example: 2
        fullName:
          type: string
          example: "Jane Smith"
        role:
          type: string
          example: "Assistant Coach"

  responses:
    InvalidRequest:
      description: The request is invalid due to incorrect parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Invalid request"
